
shangping guo <shangpingguo@gmail.com>
9:21 AM (2 hours ago)
to me

refresh work experience and prepare for behaviour interview questions
a list of work and experiences in work
medical imaging:
- functional analysis and performance requirement
- design software architecture, modularize
- prototyping, feasibility and build the essential modules
- define modular interfaces, ood design.
- assign modules
- implement and check progress and following the guidelines
- unit test and integration test
- work
the core: multithreading
dsp communication module:
config module
graphics system
file system
dicom system
b mode processing
cfi data processing
pw data processing
cw data processing
3d/4d/panaroma
serial port interface to microcontroller
bug fixing and streamlize the team work.


underwater imaging:

adcp poduct line:


A behavioral interview focuses on asking questions to identify past behaviors and successes that closely relate to situations youâ€™ll encounter in the job for which you have applied. This style of interviewing is used by most employers.

behavioral is generally story telling using STAR method.
Amazon 14 leadership principle is the most important guidelines.

focus on:
team work

- how to build a successful team
communicate effectively and work through challenges with others.
open and free-flowing communication, mutual support and tolerance.
encourage of new ideas and committment
effective communication is the most important. Consistently update ensuring each one is on the same track.
listen carefully and build trust.
encouragement of new ideas
understand the strength and weakness of each team member and allocate task to most appropriate person.
efficiency:
ideas:
support:

- how to work with engineers from other division, hardware, mechanics, business
describe the situation and articulate the requirement, convery the image accurately
void miscommunication

- how to work with engineers with different background
- how to mentor junior/senior level engineers? management style et al
- develope the best: give top performer more responsibility. given suggestions to improve.
- development plan for junior engineer, assigning work challenging but not beyond their ability, build tr confidence, skills, trust and align to our team success.
- for senior engineer: more abstract guidelines, for junior engineer, more concrete guides and help them achieve success.


leadership
leadership is important for engineer role to ensure achieving the desired results and satisfactory relaiability. To bring engineer with different specialities together and align with the same goal.

How to develop leadership skills?
- meet all specifications
- deliver the project on time
- stay on budget (time, resources are all budgets)
- performance quality control.
- make right decisions a lot

make decisions:
- small technical decisions, make a call and move fast forward (need to stand a higher level and has a big picture and enough details)
- decisions will affect days, need to balance and trade off
- decisions will affect weeks and significant, need discuss with business leader.

example:
tools and languages, coding guidelines
situation: engineers with different skills and languages, experience constraints.
action: choose c++/MFC, define interface and modules, setup coding rules, active code review
result: concise, reusable and clear architect, limit problem spreading



conflict
- avoid emotional to get in way of work, keep professional
- someone maybe emotional due to specific reason, try to solve the problem.
- use data/proof to convince
- look for 3rd party perspective and be more objective.
- focus on behavior and events, not personality (do not take it personal and move on)
- listen carefully to other side's opinion
- identify points of agreement and disagreement
- prioritize the area of conflict
- develop a plan to work on each conflict.

problem solving.
- systematic approach for a problem
- ethic and altitude: initiative, creativity, resource, analytical, persist, result oriented.

engineering: divide and conquer approach!
- how to approach a problem with considerable complexity
- identify problem scope and constraints (resources available)
- dealing with tradeoffs.
- define problem scope and requirements
- define functional requirements
- define performance requirements
- break down into several parts and interaction of them 

five step approach:
- identify the problem: be specific and focus on what is needed to move on.
- explore the problem: divide the problem into components.

example:
design the software architect for our medical imaging system.

a situatiion solving a difficult problem

a situation solving a problem in creative way.
situation: medical touchscreen.
creative: browser + html + IPC, considering business 

anticapated potential problems and preventative measures

work under a lot of pressure
situation: rph calibration for usbl, junior time
action: break into several parts and get them done step by step.
results: delivered and got it correct
lesson: learned systematic way to approach, and hard beyond ability.

